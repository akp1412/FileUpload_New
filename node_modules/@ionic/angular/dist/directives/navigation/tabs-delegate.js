var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
import { ContentChildren, Directive, ElementRef, HostListener, Optional, QueryList } from '@angular/core';
import { TabDelegate } from './tab-delegate';
import { NavController } from '../../providers';
var TabsDelegate = /** @class */ (function () {
    function TabsDelegate(navCtrl, elementRef) {
        this.navCtrl = navCtrl;
        var nativeEl = elementRef.nativeElement;
        nativeEl.useRouter = true;
    }
    TabsDelegate.prototype.urlForTab = function (tab) {
        var tabDelegate = this.tabs.find(function (item) { return item.tab === tab; });
        return tabDelegate ? tabDelegate.getLastUrl() : undefined;
    };
    TabsDelegate.prototype.onTabbarClick = function (ev) {
        var detail = ev.detail;
        var tab = detail.tab, href = detail.href, selected = detail.selected;
        if (tab && href) {
            var url = selected
                ? href
                : this.urlForTab(tab) || href;
            this.navCtrl.navigateBack(url, true);
        }
    };
    __decorate([
        ContentChildren(TabDelegate),
        __metadata("design:type", QueryList)
    ], TabsDelegate.prototype, "tabs", void 0);
    __decorate([
        HostListener('ionTabButtonClick', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], TabsDelegate.prototype, "onTabbarClick", null);
    TabsDelegate = __decorate([
        Directive({
            selector: 'ion-tabs'
        }),
        __param(0, Optional()),
        __metadata("design:paramtypes", [NavController,
            ElementRef])
    ], TabsDelegate);
    return TabsDelegate;
}());
export { TabsDelegate };
