var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Injectable } from '@angular/core';
var DomController = /** @class */ (function () {
    function DomController() {
    }
    DomController.prototype.read = function (cb) {
        getQueue().read(cb);
    };
    DomController.prototype.write = function (cb) {
        getQueue().write(cb);
    };
    DomController = __decorate([
        Injectable()
    ], DomController);
    return DomController;
}());
export { DomController };
function getQueue() {
    var Ionic = window.Ionic;
    if (Ionic && Ionic.queue) {
        return Ionic.queue;
    }
    return {
        read: function (cb) { return window.requestAnimationFrame(cb); },
        write: function (cb) { return window.requestAnimationFrame(cb); }
    };
}
