{"version":3,"sources":["webpack:///./node_modules/exif-js/exif.js","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/home.page.html","webpack:///./src/app/home/home.page.scss","webpack:///./src/app/home/home.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,IAA8B;AACtC;AACA;AACA;AACA;AACA,KAAK,MAAM,EAEN;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,+DAA+D,KAAK,qBAAqB,0BAA0B;AACnH,6CAA6C,KAAK;AAClD;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;AACA;;AAEA,aAAa,qCAAqC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,aAAa;AACb;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wEAAwE;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA,SAAS,8BAA8B;AACvC;AACA;;AAEA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;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","file":"home-home-module.js","sourcesContent":["(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {\n        root.EXIF = EXIF;\n    }\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('exif-js', [], function() {\n            return EXIF;\n        });\n    }\n}.call(this));\n\n","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HomePage } from './home.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild([{ path: '', component: HomePage }])\r\n  ],\r\n  declarations: [HomePage]\r\n})\r\nexport class HomePageModule {}\r\n","module.exports = \"      \\r\\n<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-segment [(ngModel)]=\\\"icons\\\" color=\\\"primary\\\" (ionChange)=\\\"tabChange()\\\">\\r\\n            <ion-segment-button value=\\\"grid\\\">\\r\\n                <ion-icon name=\\\"grid\\\"></ion-icon>\\r\\n            </ion-segment-button>\\r\\n            <ion-segment-button value=\\\"albums\\\">\\r\\n                <ion-icon name=\\\"albums\\\"></ion-icon>\\r\\n            </ion-segment-button>\\r\\n        </ion-segment>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n        <ion-refresher-content></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <img #img1 class=\\\"image_error\\\"  (load)=\\\"imgLoaded()\\\">\\r\\n    <div class=\\\"swiper-container\\\">\\r\\n        <!--<div class=\\\"swiper-wrapper\\\">-->\\r\\n        <!--<ion-slides pager=\\\"false\\\" autoHeight=\\\"true\\\" (ionSlideDidChange)=\\\"slideDidChange()\\\" (ionSlideWillChange)=\\\"slideWillChange()\\\" [ngStyle]=\\\"{ 'height': slideIndex===0 ? 'auto' : '100vh' }\\\">-->\\r\\n        <ion-slides sliderperview=\\\"2\\\" pager=\\\"false\\\" [options]=\\\"slideOpts\\\" (ionSlideDidChange)=\\\"slideDidChange()\\\" (ionSlideWillChange)=\\\"slideWillChange()\\\">\\r\\n\\r\\n            <ion-slide>\\r\\n\\r\\n\\r\\n\\r\\n                <ion-grid style=\\\"width:100%;\\\">\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-item>\\r\\n                                <ion-label style=\\\"color:darkred;font-size:12px;\\\">This Week</ion-label>\\r\\n                            </ion-item>\\r\\n                            <ion-grid>\\r\\n                                <ion-row *ngFor=\\\"let row of grid_W1\\\">\\r\\n                                    <ion-col *ngFor=\\\"let file_uri of row\\\" style=\\\"padding:2px;\\\">\\r\\n\\r\\n                                        <div class=\\\"square\\\" (click)=\\\"LoadImage(file_uri,'W1')\\\" [style.background-image]=\\\"'url(' + file_uri + ')'\\\"></div>\\r\\n\\r\\n                                    </ion-col>\\r\\n                                </ion-row>\\r\\n                            </ion-grid>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-item>\\r\\n                                <ion-label style=\\\"color: darkred;font-size:12px;\\\">Last Week</ion-label>\\r\\n                            </ion-item>\\r\\n\\r\\n                            <ion-grid>\\r\\n                                <ion-row *ngFor=\\\"let row of grid_W2\\\">\\r\\n                                    <ion-col *ngFor=\\\"let file_uri of row\\\" style=\\\"padding:2px;\\\">\\r\\n                                        <div class=\\\"square\\\" (click)=\\\"LoadImage(file_uri,'W2')\\\" [style.background-image]=\\\"'url(' + file_uri + ')'\\\"></div>\\r\\n                                    </ion-col>\\r\\n\\r\\n                                </ion-row>\\r\\n                            </ion-grid>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-item>\\r\\n                                <ion-label style=\\\"color:darkred;font-size:12px;\\\">2 Weeks Ago</ion-label>\\r\\n                            </ion-item>\\r\\n\\r\\n\\r\\n                            <ion-grid>\\r\\n                                <ion-row *ngFor=\\\"let row of grid_W3\\\">\\r\\n                                    <ion-col *ngFor=\\\"let file_uri of row\\\" style=\\\"padding:2px;\\\">\\r\\n                                        <div class=\\\"square\\\" (click)=\\\"LoadImage(file_uri,'W3')\\\" [style.background-image]=\\\"'url(' + file_uri + ')'\\\"></div>\\r\\n                                    </ion-col>\\r\\n                                </ion-row>\\r\\n                            </ion-grid>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-item>\\r\\n                                <ion-label style=\\\"color:darkred;font-size:12px;\\\">3 Week Ago</ion-label>\\r\\n                            </ion-item>\\r\\n                            <ion-grid>\\r\\n                                <ion-row *ngFor=\\\"let row of grid_W4\\\">\\r\\n                                    <ion-col *ngFor=\\\"let file_uri of row\\\" style=\\\"padding:2px;\\\">\\r\\n                                        <div class=\\\"square\\\" (click)=\\\"LoadImage(file_uri,'W4')\\\" [style.background-image]=\\\"'url(' + file_uri + ')'\\\"></div>\\r\\n                                    </ion-col>\\r\\n                                </ion-row>\\r\\n                            </ion-grid>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-item>\\r\\n                                <ion-label style=\\\"color:darkred;font-size:12px;\\\">Last Month</ion-label>\\r\\n                            </ion-item>\\r\\n\\r\\n                            <ion-grid>\\r\\n                                <ion-row *ngFor=\\\"let row of grid_M1\\\">\\r\\n                                    <ion-col *ngFor=\\\"let file_uri of row\\\" style=\\\"padding:2px;\\\">\\r\\n                                        <div class=\\\"square\\\" (click)=\\\"LoadImage(file_uri,'M1')\\\" [style.background-image]=\\\"'url(' + file_uri + ')'\\\"></div>\\r\\n                                    </ion-col>\\r\\n                                </ion-row>\\r\\n                            </ion-grid>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-item>\\r\\n                                <ion-label style=\\\"color:darkred;font-size:12px;\\\">2 Months Ago</ion-label>\\r\\n                            </ion-item>\\r\\n                            <ion-grid>\\r\\n                                <ion-row *ngFor=\\\"let row of grid_M2\\\">\\r\\n                                    <ion-col *ngFor=\\\"let file_uri of row\\\" style=\\\"padding:2px;\\\">\\r\\n                                        <div class=\\\"square\\\" (click)=\\\"LoadImage(file_uri,'M2')\\\" [style.background-image]=\\\"'url(' + file_uri + ')'\\\"></div>\\r\\n                                    </ion-col>\\r\\n                                </ion-row>\\r\\n                            </ion-grid>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-item>\\r\\n                                <ion-label style=\\\"color:darkred;font-size:12px;\\\">Earlier in : {{strM3Qualifier}}</ion-label>\\r\\n                            </ion-item>\\r\\n                            <ion-grid>\\r\\n                                <ion-row *ngFor=\\\"let row of grid_M3\\\">\\r\\n                                    <ion-col *ngFor=\\\"let file_uri of row\\\" style=\\\"padding:2px;\\\">\\r\\n                                        <div class=\\\"square\\\" (click)=\\\"LoadImage(file_uri,'M3')\\\" [style.background-image]=\\\"'url(' + file_uri + ')'\\\"></div>\\r\\n                                    </ion-col>\\r\\n                                </ion-row>\\r\\n                            </ion-grid>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-item>\\r\\n                                <ion-label style=\\\"color:darkred;font-size:12px;\\\" (click)=\\\"setImgFilter('Y1')\\\">Year: {{strY1Qualifier}} </ion-label>\\r\\n                            </ion-item>\\r\\n                            <ion-grid>\\r\\n                                <ion-row *ngFor=\\\"let row of grid_Y1\\\">\\r\\n                                    <ion-col *ngFor=\\\"let file_uri of row\\\" style=\\\"padding:2px;\\\">\\r\\n                                        <div class=\\\"square\\\" (click)=\\\"LoadImage(file_uri,'Y1')\\\" [style.background-image]=\\\"'url(' + file_uri + ')'\\\"></div>\\r\\n                                    </ion-col>\\r\\n                                </ion-row>\\r\\n                            </ion-grid>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n\\r\\n\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-item>\\r\\n                                <ion-label style=\\\"color:darkred;font-size:12px;\\\" (click)=\\\"setImgFilter('Y2')\\\">Year: {{strY2Qualifier}} </ion-label>\\r\\n                            </ion-item>\\r\\n                            <ion-grid>\\r\\n                                <ion-row *ngFor=\\\"let row of grid_Y2\\\">\\r\\n                                    <ion-col *ngFor=\\\"let file_uri of row\\\" style=\\\"padding:2px;\\\">\\r\\n                                        <div class=\\\"square\\\" (click)=\\\"LoadImage(file_uri,'Y2')\\\" [style.background-image]=\\\"'url(' + file_uri + ')'\\\"></div>\\r\\n                                    </ion-col>\\r\\n                                </ion-row>\\r\\n                            </ion-grid>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-item>\\r\\n                                <ion-label style=\\\"color:darkred;font-size:12px;\\\" (click)=\\\"setImgFilter('Y3')\\\">Year: {{strY3Qualifier}} </ion-label>\\r\\n                            </ion-item>\\r\\n                            <ion-grid>\\r\\n                                <ion-row *ngFor=\\\"let row of grid_Y3\\\">\\r\\n                                    <ion-col *ngFor=\\\"let file_uri of row\\\" style=\\\"padding:2px;\\\">\\r\\n                                        <div class=\\\"square\\\" (click)=\\\"LoadImage(file_uri,'Y3')\\\" [style.background-image]=\\\"'url(' + file_uri + ')'\\\"></div>\\r\\n                                    </ion-col>\\r\\n\\r\\n                                </ion-row>\\r\\n                            </ion-grid>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-item>\\r\\n                                <ion-label style=\\\"color:darkred;font-size:12px;\\\" (click)=\\\"setImgFilter('Y4')\\\">Older... </ion-label>\\r\\n                            </ion-item>\\r\\n\\r\\n\\r\\n\\r\\n                            <ion-grid>\\r\\n                                <ion-row *ngFor=\\\"let row of grid_Y4\\\">\\r\\n                                    <ion-col *ngFor=\\\"let file_uri of row\\\" style=\\\"padding:2px;\\\">\\r\\n                                        <div class=\\\"square\\\" (click)=\\\"LoadImage(file_uri,'Y4')\\\" [style.background-image]=\\\"'url(' + file_uri + ')'\\\"></div>\\r\\n                                    </ion-col>\\r\\n                                </ion-row>\\r\\n                            </ion-grid>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n\\r\\n\\r\\n            </ion-slide>\\r\\n\\r\\n            <ion-slide>\\r\\n\\r\\n                <ion-grid class=\\\"MyGrid\\\">\\r\\n                    <ion-row wrap>\\r\\n                        <ion-col *ngFor=\\\"let album of Albums\\\">\\r\\n                            <img (click)=\\\"loadAlbum(album)\\\" src=\\\"assets/icon/albums.jpg\\\" />\\r\\n                            <ion-label align=\\\"center\\\">{{album}}</ion-label>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n\\r\\n\\r\\n            </ion-slide>\\r\\n\\r\\n        </ion-slides>\\r\\n    </div>\\r\\n\\r\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" *ngIf=\\\"icons !='albums' \\\">\\r\\n        <ion-fab-button color=\\\"tertiary\\\" (click)=\\\"LoadSourceOptions()\\\" ion-fab mini><ion-icon name=\\\"cloud-upload\\\"></ion-icon></ion-fab-button>\\r\\n    </ion-fab>\\r\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" *ngIf=\\\"icons ==='albums' \\\">\\r\\n        <ion-fab-button color=\\\"tertiary\\\" (click)=\\\"addAlbum()\\\" ion-fab mini><ion-icon name=\\\"add\\\"></ion-icon></ion-fab-button>\\r\\n    </ion-fab>\\r\\n    <!--<ion-fab vertical=\\\"top\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\r\\n        <ion-fab-button color=\\\"secondary\\\" (click)=\\\"presentAlertSettings()\\\" ion-fab mini><ion-icon name=\\\"settings\\\"></ion-icon></ion-fab-button>\\r\\n    </ion-fab>-->\\r\\n</ion-content>\\r\\n\"","module.exports = \".square {\\n  width: 100%;\\n  padding-bottom: 100%;\\n  background-color: black;\\n  background-size: contain;\\n  background-repeat: no-repeat;\\n  background-position: center; }\\n\\n.wrapper * {\\n  /*height: 100%;*/\\n  width: 100%; }\\n\\n.MyGrid {\\n  --ion-grid-columns: 2; }\\n\\n.image_error {\\n  display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9DOlxcVXNlcnNcXGFtaXQucGF1bFxcRmlsZVVwbG9hZC9zcmNcXGFwcFxcaG9tZVxcaG9tZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFXO0VBQ1gscUJBQW9CO0VBQ3BCLHdCQUF1QjtFQUN2Qix5QkFBd0I7RUFDeEIsNkJBQTRCO0VBQzVCLDRCQUEyQixFQUM5Qjs7QUFFRDtFQUNJLGlCQUFpQjtFQUNqQixZQUFXLEVBRWQ7O0FBRUQ7RUFDSSxzQkFBbUIsRUFDdEI7O0FBRUQ7RUFDSSxjQUFhLEVBQ2hCIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zcXVhcmUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxufVxyXG5cclxuLndyYXBwZXIgKiB7XHJcbiAgICAvKmhlaWdodDogMTAwJTsqL1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBcclxufVxyXG5cclxuLk15R3JpZCB7XHJcbiAgICAtLWlvbi1ncmlkLWNvbHVtbnM6IDI7XHJcbn1cclxuXHJcbi5pbWFnZV9lcnJvciB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4iXX0= */\"","import { Component, ElementRef } from '@angular/core';\r\nimport { NavController, LoadingController, ToastController, Datetime, Img } from '@ionic/angular';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { CommunityService } from '../../app/services/community.service';\r\nimport { PhotoViewer } from '@ionic-native/photo-viewer/ngx';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { ImagePicker } from '@ionic-native/image-picker/ngx';\r\nimport { GalleryPage } from '../gallery/gallery.page';\r\nimport { MasterDetailService } from '../../app/services/masterdetail.service';\r\nimport { Base64 } from '@ionic-native/base64/ngx';\r\nimport { ViewChild } from '@angular/core';\r\nimport { Slides, Slide } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Screenshot } from '@ionic-native/screenshot/ngx';\r\nimport * as exif from 'exif-js'\r\n\r\ninterface CameraDetail {\r\n    filename: string;\r\n    json_metadata: string;\r\n}\r\n\r\ninterface CameraExifDetail {\r\n    aperture: string;\r\n    datetime: string;\r\n    exposureTime: string;\r\n    flash: string;\r\n    focalLength: string;\r\n    gpsAltitude: string;\r\n    gpsAltitudeRef: string;\r\n    gpsDateStamp: string;\r\n    gpsLatitude: string;\r\n    gpsLatitudeRef: string;\r\n    gpsLongitude: string;\r\n    gpsLongitudeRef: string;\r\n    gpsProcessingMethod: string;\r\n    gpsTimestamp: string;\r\n    iso: string;\r\n    make: string;\r\n    model: string;\r\n    orientation: string;\r\n    whiteBalance: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.page.html',\r\n  styleUrls: ['home.page.scss']\r\n})\r\nexport class HomePage {\r\n    @ViewChild(Slides) slides: Slides;\r\n    @ViewChild(Slide) slide: Slide;\r\n    @ViewChild('img1') img1: Img;\r\n\r\n\r\n    imgSource: any;\r\n    imageURI: any;\r\n    imageFileName: any;\r\n    loader: any;\r\n    public photos: any;\r\n    public base64Image: string;\r\n    imageDetail;\r\n    objImageList: any;\r\n    rowNum;\r\n    colNum;\r\n    newImgArray: any = [];\r\n    slidesMoving: boolean;\r\n    slidesHeight: any;\r\n    slideIndex: any = 0;\r\n    blnLoadingDismissed: boolean = false;\r\n    slideOpts = {\r\n        autoHeight: 'true',\r\n        initialSlide: '1'\r\n    };\r\n    //Album Slide specific\r\n    Albums: string[] = [];\r\n    /////////////////////\r\n\r\n    constructor(public navCtrl: NavController,\r\n        private transfer: FileTransfer,\r\n        private camera: Camera,\r\n        private file: File,\r\n        public loadingCtrl: LoadingController,\r\n        public toastCtrl: ToastController,\r\n        public httpClient: Http,\r\n        private communityService: CommunityService,\r\n        private photoViewer: PhotoViewer,\r\n        public alertController: AlertController,\r\n        private imagePicker: ImagePicker,\r\n        private masterDetailService: MasterDetailService,\r\n        private route: ActivatedRoute, private storage: Storage,\r\n        private screenshot: Screenshot\r\n        ) { }\r\n\r\n    public images: Array<string>;\r\n    private cntImagetoLoad: any = 0;\r\n    private grid: Array<Array<string>>;\r\n    private localGrid: Array<Array<string>>;\r\n    private grid_W1: Array<Array<string>>;\r\n    private grid_W2: Array<Array<string>>;\r\n    private grid_W3: Array<Array<string>>;\r\n    private grid_W4: Array<Array<string>>;\r\n    private grid_M1: Array<Array<string>>;\r\n    private grid_M2: Array<Array<string>>;\r\n    private grid_M3: Array<Array<string>>;\r\n    private grid_Y1: Array<Array<string>>;\r\n    private grid_Y2: Array<Array<string>>;\r\n    private grid_Y3: Array<Array<string>>;\r\n    private grid_Y4: Array<Array<string>>;\r\n    private strM3Qualifier: string;\r\n    private strY1Qualifier: string;\r\n    private strY2Qualifier: string;\r\n    private strY3Qualifier: string;\r\n    private icons: any = \"grid\";\r\n    private chosenImg: string;\r\n\r\n    ngOnInit() {\r\n        this.slideIndex = 0;\r\n        //this.presentAlertMultipleButtons();\r\n        //this.getImageList();\r\n        //this.presentAlertLoadError(\"Checking Service Version\");\r\n        this.storage.get('serviceVersion').then(val => {\r\n            if (val != null) {\r\n                console.log(val);\r\n                if (val === \"P\") {\r\n                    //this.communityService.baseUrl = \"https://azcommunityrestapi20181209100659.azurewebsites.net/api\";\r\n                    //this.communityService.baseUrl = \"https://95.179.202.83:443/api\";\r\n                    this.communityService.baseUrl = \"http://atozsolutions.co.za:49168/api\";\r\n                    \r\n                } else if (val === \"A\") {\r\n                    this.communityService.baseUrl = \"http://10.0.2.2:49168/api\";\r\n                } else if (val === \"B\") {\r\n                    this.communityService.baseUrl = \"http://localhost:49168/api\";\r\n                }\r\n                //this.presentAlertLoadError(\"Service Version Set\");\r\n                this.presentLoading();\r\n                this.getImageList();\r\n            }\r\n            else {\r\n                //this.presentAlertLoadError(\"Service Version not found using default\");\r\n                //this.communityService.baseUrl = \"https://azcommunityrestapi20181209100659.azurewebsites.net/api\";\r\n                //this.communityService.baseUrl = \"https://95.179.202.83:443/api\";\r\n                this.communityService.baseUrl = \"http://atozsolutions.co.za:8100/api\";\r\n                this.presentLoading();\r\n                this.getImageList();\r\n            }\r\n        });\r\n\r\n\r\n        this.storage.get('imgPerRow').then(val => {\r\n            if (val != null) {\r\n                console.log(val);\r\n                this.masterDetailService.setImgGridCols(parseInt(val));\r\n                \r\n            }\r\n            else {\r\n                //this.navCtrl.navigateForward('login');\r\n            }\r\n        });\r\n\r\n        this.storage.get('rowsPerPage').then(val => {\r\n            if (val != null) {\r\n                console.log(val);\r\n                this.masterDetailService.setImgGridRows(parseInt(val));\r\n                \r\n            }\r\n            else {\r\n                //this.navCtrl.navigateForward('login');\r\n            }\r\n        });\r\n\r\n       \r\n        \r\n        \r\n    }\r\n    \r\n    async presentImageSOurceOptions() {\r\n        const alert = await this.alertController.create({\r\n            header: 'Input Required!',\r\n            message: 'Please select image source',\r\n            buttons: [\r\n                {\r\n                    text: 'Camera',\r\n                    handler: () => {\r\n                        // this.navCtrl.navigateForward('add_news');\r\n                        \r\n                        this.getImage();\r\n                        console.log('Camera Selected');\r\n\r\n                    }\r\n                }, {\r\n                    text: 'Library',\r\n                    handler: () => {\r\n                        // this.navCtrl.navigateForward('add_news');\r\n                        this.LoadImagePicker()\r\n                        console.log('Image Picker Selected');\r\n\r\n                    }\r\n                },{\r\n                    text: 'Cancel',\r\n                    role: 'cancel',\r\n                    cssClass: 'secondary',\r\n                    handler: (blah) => {\r\n\r\n                        console.log('Upload Cancelled');\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n\r\n\r\n        await alert.present();\r\n    }\r\n\r\n    LoadSourceOptions() {\r\n        this.presentImageSOurceOptions();\r\n    }\r\n\r\n    async presentAlertMultipleButtons() {\r\n        const alert = await this.alertController.create({\r\n            header: 'Attention!',\r\n            message: 'Please select the environment',\r\n            buttons: [\r\n                {\r\n                    text: 'Android',\r\n                    role: 'cancel',\r\n                    cssClass: 'secondary',\r\n                    handler: (blah) => {\r\n                        this.communityService.baseUrl = \"http://10.0.2.2:49168/api\";\r\n                        this.presentLoading();\r\n                        this.getImageList();\r\n                        console.log('Confirm Cancel: blah');\r\n                    }\r\n                }, {\r\n                    text: 'Browser',\r\n                    handler: () => {\r\n                        // this.navCtrl.navigateForward('add_news');\r\n                        this.communityService.baseUrl = \"http://localhost:49168/api\";\r\n                        this.presentLoading();\r\n                        this.getImageList();\r\n                        console.log('Confirm Okay');\r\n\r\n                    }\r\n                }, {\r\n                    text: 'Production',\r\n                    handler: () => {\r\n                        // this.navCtrl.navigateForward('add_news');\r\n                        //this.communityService.baseUrl = \"https://azcommunityrestapi20181209100659.azurewebsites.net/api\";\r\n                        this.communityService.baseUrl = \"https://95.179.202.83:443/api\";\r\n                        this.presentLoading();\r\n                        this.getImageList();\r\n                        //this.slides.options = this.slideOpts;\r\n                        console.log('Confirm Okay');\r\n\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n\r\n\r\n        await alert.present();\r\n    }\r\n\r\n    LoadImage(imgUrl,strFilter){\r\n        \r\n        if (imgUrl === 'assets/icon/more.png') {\r\n            this.setImgFilter(strFilter);\r\n        } else if(imgUrl != ''){\r\n            //this.presentLoading();\r\n            let imgName = imgUrl.replace(this.masterDetailService.getThumbBase(), '');\r\n            //let intIndex = this.objImage.findIndex(x => x.imgName === imgName);\r\n            let intIndex = this.masterDetailService.getImages().filter(p => p.period === strFilter).findIndex(x => x.imgName === imgName);\r\n            if (intIndex != -1) {\r\n                this.masterDetailService.setIndex(intIndex);\r\n            } else {\r\n                intIndex = this.getGridIndex(imgUrl, strFilter);\r\n                this.masterDetailService.setIndex(intIndex);\r\n            }\r\n            \r\n            //this.masterDetailService.setImages(this.objImageList.filter(p => p.period === strFilter));\r\n            this.masterDetailService.setFilter(strFilter);\r\n            this.masterDetailService.setListMode(\"GENERAL\");\r\n            this.navCtrl.navigateForward('gallery');\r\n        }\r\n        \r\n        \r\n\r\n        //this.photoViewer.show(this.objImageList.filter(p => p.imgUrl === imgUrl)[0].imgParentUrl);\r\n        \r\n    }\r\n\r\n    LoadImagePicker() {\r\n        let options = {\r\n            maximumImagesCount: 5,\r\n            quality: 75,\r\n            outputType: 0\r\n        }\r\n        \r\n        this.imagePicker.getPictures(options).then(\r\n            (file_uris) => {\r\n                \r\n                console.log(file_uris);\r\n                this.masterDetailService.setUris(file_uris);\r\n                //this.navCtrl.navigateForward('gallery');\r\n                this.cntImagetoLoad = file_uris.length;\r\n                this.presentLoading();\r\n                for (let i = 0; i < file_uris.length; i++) {\r\n                    \r\n                    \r\n                    this.getBase64String(file_uris[i]);\r\n                    \r\n                    \r\n                }\r\n                //////this.getImageList();\r\n            },(err) => { console.log('uh oh'); }\r\n        );\r\n    }\r\n\r\n    getBase64String(imageUri) {\r\n        let fileName = imageUri.split('/').pop();\r\n        let path = imageUri.substring(0, imageUri.lastIndexOf(\"/\") + 1);\r\n        //var window: any;\r\n        //window.resolveLocalFileSystemURI(imageUri, (fileEntry) => {\r\n        //    fileEntry.getMetadata((metadata) => {\r\n        //        console.log(\"image size : \" + metadata.size);\r\n        //        console.log(\"image date : \" + metadata.modificationTime);\r\n        //    });\r\n        //});\r\n        //this.file.getFile(path, fileName).then()\r\n        //let img = { src: imageUri.webPath };\r\n\r\n\r\n        \r\n        //this.chosenImg = \"data:image/jpeg;base64,\" + imageUri;\r\n\r\n        //if (this.platform.is('ios'))\r\n        //    this.chosenImg = normalizeURL(imageData);\r\n        //// IF problem only occur in ios and normalizeURL \r\n        ////not work for you then you can also use \r\n        ////this.base64Image= imageData.replace(/^file:\\/\\//, '');\r\n        //else\r\n    //        this.base64Image = \"data:image/jpeg;base64,\" + imageData;\r\n    //}\r\n        \r\n    \r\n        //this.file.resolveDirectoryUrl(path).then(dirEntry => {\r\n            \r\n        //    this.file.getFile(dirEntry, fileName, { create: false }).then(fileEntry => {\r\n        //        fileEntry.getMetadata(function (metadata) {\r\n        //            console.log(metadata.modificationTime)\r\n        //        })\r\n        //    })\r\n        //});\r\n\r\n        this.file.readAsDataURL(path, fileName)\r\n            .then(base64File => {\r\n                //const cameraDetail = <CameraDetail>JSON.parse(base64File.replace(\"data:image/jpeg;base64,\", ''));\r\n\r\n                //const exifData = <CameraExifDetail>JSON.parse(cameraDetail.json_metadata);\r\n                //this.chosenImg = base64File;\r\n                this.base64Image = base64File;\r\n                                \r\n                this.img1.src = this.base64Image;\r\n\r\n                exif.getData(this.img1, function () {\r\n                    var allMetaData = exif.getAllTags(this);\r\n                    console.log('ALL TAGS - ', allMetaData)\r\n\r\n                    let lng = exif.getTag(this, 'GPSLongitude') || null\r\n                    let lat = exif.getTag(this, 'GPSLatitude') || null\r\n\r\n                    console.log('LNG - ', lng)\r\n                    console.log('LAT - ', lat)\r\n                })\r\n\r\n                this.uploadFile();\r\n                \r\n            })\r\n            .catch(() => {\r\n                console.log('Error reading file');\r\n                return '';\r\n            })\r\n        \r\n\r\n    }\r\n\r\n    imgLoaded() {\r\n        //document.getElementById(\"img1\")\r\n        exif.getData(this.img1, function () {\r\n            var allMetaData = exif.getAllTags(this);\r\n            console.log('ALL TAGS - ', allMetaData)\r\n\r\n            let lng = exif.getTag(this, 'GPSLongitude') || null\r\n            let lat = exif.getTag(this, 'GPSLatitude') || null\r\n\r\n            console.log('LNG - ', lng)\r\n            console.log('LAT - ', lat)\r\n        })\r\n        \r\n    }\r\n\r\n    setBase(baseResponse) {\r\n        this.masterDetailService.setParentBase(baseResponse.baseParent);\r\n        this.masterDetailService.setThumbBase(baseResponse.baseThumbnail);\r\n    }\r\n\r\n    getImageList() {\r\n        console.log(this.getDateTime());\r\n        //this.presentAlertLoadError(\"Getting Base Urls\");\r\n        this.communityService.getImageBaseUrls().subscribe(resp => {\r\n            //this.presentAlertLoadError(\"Base Urls Received\");\r\n            this.setBase(resp);\r\n            //this.presentAlertLoadError(\"Getting Images\");\r\n        //this.masterDetailService.setParentBase(\"https://s3-us-west-2.amazonaws.com/azcommunityimages/\");\r\n        //this.masterDetailService.setThumbBase(\"https://s3-us-west-2.amazonaws.com/azcommunityimages//Thumbnails/\");\r\n            this.communityService.getImageList().subscribe(resp => {\r\n                try {\r\n                    //this.presentAlertLoadError(\"Images Received\");\r\n                    this.masterDetailService.setImages(resp);\r\n                    console.log(this.masterDetailService.setImages);\r\n                    ///////ALBUM PAGE//////////////\r\n                    this.Albums = this.masterDetailService.getAlbums().split(\",\");\r\n                    ///////////////////////////////\r\n\r\n                    this.populateGrid(\"W1\");\r\n                    this.populateGrid(\"W2\");\r\n                    this.populateGrid(\"W3\");\r\n                    this.populateGrid(\"W4\");\r\n                    this.populateGrid(\"M1\");\r\n                    this.populateGrid(\"M3\");\r\n                    this.populateGrid(\"M2\");\r\n                    this.populateGrid(\"Y1\");\r\n                    this.populateGrid(\"Y2\");\r\n                    this.populateGrid(\"Y3\");\r\n                    this.populateGrid(\"Y4\");\r\n\r\n                    ///////ALBUM PAGE//////////////\r\n                    this.Albums = this.masterDetailService.getAlbums().split(\",\");\r\n                    //this.slides.slideNext();\r\n                    this.slides.slideTo(0);\r\n                    //this.slides.slidePrev();\r\n                    ///////////////////////////////\r\n                    this.loadingCtrl.dismiss();\r\n                } catch (err) {\r\n                    this.blnLoadingDismissed = true;\r\n                    this.loadingCtrl.dismiss();\r\n                    this.presentAlertLoadError(err);\r\n                }\r\n                \r\n            }, err => {\r\n                this.blnLoadingDismissed = true;\r\n                this.loadingCtrl.dismiss();\r\n                this.presentAlertLoadError(err);\r\n            });\r\n        }, err => {\r\n            this.blnLoadingDismissed = true;\r\n            this.loadingCtrl.dismiss();\r\n            this.presentAlertLoadError(err);\r\n            });\r\n        \r\n        //this.objcommunity = this.communityService.getCommunity(id);\r\n        //console.log(this.objcommunity);\r\n\r\n    }\r\n\r\n    async presentAlertLoadError(strMessage) {\r\n        const alert = await this.alertController.create({\r\n            header: 'Load Error!',\r\n            message: strMessage,\r\n            buttons: [\r\n                 {\r\n                    text: 'OK',\r\n                    handler: () => {\r\n                        \r\n                    }\r\n                }\r\n\r\n            ]\r\n        });\r\n\r\n        await alert.present();\r\n    }\r\n\r\n    getGridIndex(imgUrl,strFilter) {\r\n        let localGrid: any;\r\n        let gridIndex = 0;\r\n        let tempGridName = \"grid_\" + strFilter;\r\n        localGrid = this[tempGridName];\r\n        for (let i = 0; i < localGrid.length; i++) {\r\n            for (let j = 0; j < localGrid[i].length; j++) {\r\n                if (localGrid[i][j] === imgUrl) {\r\n                    return gridIndex;\r\n                } else {\r\n                    gridIndex++;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    populateGrid(periodFilter) {\r\n         \r\n        let localImgList = this.masterDetailService.getImages().filter(p => p.period === periodFilter);\r\n        let rowCount;\r\n        if (localImgList.length > 20) {\r\n            this.localGrid = Array(5);\r\n            rowCount = 20;\r\n        } else {\r\n            this.localGrid = Array(Math.ceil(localImgList.length / 4));\r\n            rowCount = localImgList.length\r\n        }\r\n        \r\n\r\n        this.rowNum = 0;\r\n\r\n        for (let i = 0; i < rowCount; i += 4) {\r\n            \r\n            this.localGrid[this.rowNum] = Array(4);\r\n\r\n            if (localImgList[i]) {\r\n                this.localGrid[this.rowNum][0] = this.masterDetailService.getThumbBase() +  localImgList[i].imgName;\r\n                //this.createArrayEntry(localImgList[i].imgUrl, localImgList[i].imgParentUrl);\r\n                this.colNum = 0;\r\n            }\r\n\r\n            if (localImgList[i + 1]) {\r\n                this.localGrid[this.rowNum][1] = this.masterDetailService.getThumbBase() + localImgList[i + 1].imgName;\r\n                this.colNum = 1;\r\n            }\r\n            else {\r\n                this.localGrid[this.rowNum][1] = \"\";\r\n            }\r\n\r\n            if (localImgList[i + 2]) {\r\n                this.localGrid[this.rowNum][2] = this.masterDetailService.getThumbBase() + localImgList[i + 2].imgName;\r\n                this.colNum = 2;\r\n            }\r\n            else {\r\n                this.localGrid[this.rowNum][2] = \"\";\r\n            }\r\n\r\n            if (localImgList[i + 3]) {\r\n                this.localGrid[this.rowNum][3] = this.masterDetailService.getThumbBase() + localImgList[i + 3].imgName;\r\n                this.colNum = 3;\r\n            }\r\n            else {\r\n                this.localGrid[this.rowNum][3] = \"\";\r\n            }\r\n            //if (localImgList[i + 4]) {\r\n            //    this.localGrid[this.rowNum][4] = localImgList[i + 4].imgUrl;\r\n            //    this.colNum = 4;\r\n            //}\r\n            //else {\r\n            //    this.localGrid[this.rowNum][4] = \"\";\r\n            //}\r\n\r\n            this.rowNum++;\r\n        }\r\n        if (localImgList.length > 20) {\r\n            this.localGrid[4][3] = 'assets/icon/more.png';\r\n        }\r\n        if (periodFilter === 'W1') {\r\n            this.grid_W1 = [];\r\n            this.grid_W1 = this.localGrid;\r\n        }\r\n        else if (periodFilter === 'W2') { this.grid_W2 = this.localGrid }\r\n        else if (periodFilter === 'W3') { this.grid_W3 = this.localGrid }\r\n        else if (periodFilter === 'W4') { this.grid_W4 = this.localGrid }\r\n        else if (periodFilter === 'M1') { this.grid_M1 = this.localGrid }\r\n        else if (periodFilter === 'M2') { this.grid_M2 = this.localGrid }\r\n        else if (periodFilter === 'M3') {\r\n            if (localImgList.length > 0) {\r\n                this.strM3Qualifier = localImgList[0].imgYear;\r\n            }\r\n            \r\n            this.grid_M3 = this.localGrid;\r\n        }\r\n        else if (periodFilter === 'Y1') {\r\n            if (localImgList.length > 0) {\r\n                this.strY1Qualifier = localImgList[0].imgYear;\r\n            }\r\n            this.grid_Y1 = this.localGrid;\r\n        }\r\n        else if (periodFilter === 'Y2') {\r\n            if (localImgList.length > 0) {\r\n                this.strY2Qualifier = localImgList[0].imgYear;\r\n            }\r\n            this.grid_Y2 = this.localGrid;\r\n        }\r\n        else if (periodFilter === 'Y3') {\r\n            if (localImgList.length > 0) {\r\n                this.strY3Qualifier = localImgList[0].imgYear;\r\n            }\r\n            this.grid_Y3 = this.localGrid;\r\n        }\r\n        else if (periodFilter === 'Y4') {\r\n            this.grid_Y4 = this.localGrid;\r\n        }\r\n\r\n        this.rowNum--;\r\n    }\r\n\r\n    setImgFilter(strFilter) {\r\n        \r\n        this.masterDetailService.setFilter(strFilter);\r\n        if (strFilter === \"Y4\") {\r\n            //this.loadingCtrl.dismiss();\r\n            this.presentPrompt(strFilter);\r\n        } else {\r\n            this.masterDetailService.setY4Filter(\"\");\r\n            this.presentListLoading();\r\n            //this.masterDetailService.setListMode(\"GALLERY\");\r\n            //this.masterDetailService.setIsDirty(false);\r\n            //this.navCtrl.navigateForward('imglist');\r\n            \r\n        }\r\n        //(this.objImageList.filter(p => p.period === strFilter));\r\n        \r\n    }\r\n\r\n    async presentListLoading() {\r\n        const loading = await this.loadingCtrl.create({\r\n            message: 'Busy...'\r\n            //,duration: 3000\r\n        });\r\n        //return await loading.present();\r\n        await loading.present().then(val => {\r\n            console.log(val);\r\n            this.masterDetailService.setListMode(\"GALLERY\");\r\n            this.masterDetailService.setIsDirty(false);\r\n            this.navCtrl.navigateForward('imglist');\r\n            //loading.dismiss();\r\n        });\r\n    }\r\n\r\n    async presentPrompt(strFilter) {\r\n\r\n        let localList = this.masterDetailService.getImages().filter(p => p.period === strFilter);\r\n        let strYears: string = \"\";\r\n        \r\n        let alertInputOptions: any = [];\r\n        for (let i = 0; i < localList.length; i++) {\r\n            if (strYears.search(localList[i].imgYear + \",\") === -1) {\r\n                strYears = strYears + localList[i].imgYear + \",\";\r\n                let x = {\r\n                    type: 'radio',\r\n                    label: localList[i].imgYear,\r\n                    name: localList[i].imgYear,\r\n                    value: localList[i].imgYear,\r\n                    checked: i===0?true:false\r\n                };\r\n                alertInputOptions.push(x);\r\n            }\r\n        }\r\n        const alert = await this.alertController.create({\r\n            header: \"Too many Images. Please select an Year to refine results\",\r\n            inputs: alertInputOptions,\r\n            buttons: [\r\n                {\r\n                    text: 'Cancel',\r\n                    role: 'cancel',\r\n                    handler: data => {\r\n                        console.log('Cancel clicked');\r\n                    }\r\n                },\r\n                {\r\n                    text: 'Open',\r\n                    handler: data => {\r\n                        this.masterDetailService.setY4Filter(data);\r\n                        this.presentListLoading();\r\n                        //this.masterDetailService.setListMode(\"GALLERY\");\r\n                        //this.masterDetailService.setIsDirty(false);\r\n                        //this.navCtrl.navigateForward('imglist');\r\n                        //console.log(data);\r\n                        //console.log(data.albumname);\r\n                        //let strAlbum: string = data.albumname;\r\n\r\n                        //this.masterDetailService.addAlbum(strAlbum.toUpperCase().replace(\"-\", \"_\"));\r\n                        //this.Albums = this.masterDetailService.getAlbums().split(\",\");\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        await alert.present();\r\n    }\r\n\r\n    addToGrid(imgUrl) {\r\n        \r\n        if (this.colNum < 3) {\r\n            this.colNum++;\r\n            this.grid[this.rowNum][this.colNum] = imgUrl;\r\n        }\r\n        else {\r\n            let rowArray = Array(4);\r\n            let x; \r\n            x = this.grid.push([ \"\", \"\", \"\", \"\"]);\r\n            this.rowNum++;\r\n            this.colNum = 0;\r\n            this.grid[this.rowNum][this.colNum] = imgUrl;\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    createArrayEntry(imgUrl,parentUrl) {\r\n        let imgEntry = {\r\n            \"imgUrl\": imgUrl,\r\n            \"imgParentUrl\": parentUrl\r\n        };\r\n\r\n        this.newImgArray.push(imgEntry);\r\n        \r\n    }\r\n\r\n    getImage() {\r\n        const options: CameraOptions = {\r\n            quality: 65,\r\n            destinationType: this.camera.DestinationType.FILE_URI,\r\n            encodingType: this.camera.EncodingType.JPEG,\r\n            mediaType: this.camera.MediaType.PICTURE,\r\n            sourceType: this.camera.PictureSourceType.CAMERA\r\n\r\n        }\r\n\r\n        this.camera.getPicture(options).then((imageData) => {\r\n\r\n            \r\n            this.presentLoading();\r\n            this.cntImagetoLoad = 1;\r\n            this.getBase64String(imageData);\r\n            \r\n\r\n            //this.file.resolveLocalFilesystemUrl(imageData).then(oneFile => {\r\n            //    this.imageFileName = oneFile.name;\r\n            //    this.file.readAsArrayBuffer(this.file.tempDirectory, oneFile.name).then(realFile=>{\r\n            //        this.imageURI = realFile;\r\n            //        console.log(this.imageFileName);\r\n            //    });\r\n            //});\r\n            \r\n        }, (err) => {\r\n            console.log(err);\r\n            this.presentToast(err);\r\n        });\r\n    }\r\n\r\n    async presentLoading() {\r\n        const loading = await this.loadingCtrl.create({\r\n            message: 'Busy...'\r\n            //,duration: 3000\r\n        });\r\n        //return await loading.present();\r\n        await loading.present().then(val => {\r\n            if (this.blnLoadingDismissed) {\r\n                this.blnLoadingDismissed = false;\r\n                loading.dismiss();\r\n            }\r\n            console.log(val);\r\n            //loading.dismiss();\r\n        });\r\n    }\r\n\r\n    getDateTime() {\r\n        let currentdate = new Date();\r\n        //let strMonth: String = currentdate.toISOString().split(\"T\")[0].split(\"-\")[1].padStart(2, \"0\");\r\n        //let strDay: String = currentdate.toISOString().split(\"T\")[0].split(\"-\")[2].padStart(2, \"0\");\r\n\r\n        //let datetime = currentdate.toISOString().split(\"T\")[0].split(\"-\")[0].toString() +\r\n        //    +strMonth +\r\n        //    + currentdate.toISOString().split(\"T\")[0].split(\"-\")[2].padStart(2, \"0\") + \"-\"\r\n        //    + currentdate.toISOString().split(\"T\")[1].split(\":\")[0] +\r\n        //    + currentdate.toISOString().split(\"T\")[1].split(\":\")[1] +\r\n        //    + currentdate.toISOString().split(\"T\")[1].split(\":\")[2].split(\".\")[0]\r\n        //    + \"-\" + currentdate.toISOString().split(\"T\")[1].split(\":\")[2].split(\".\")[1].replace(\"Z\", \"\");\r\n\r\n        let datetime = currentdate.toISOString().split(\"T\")[0].split(\"-\")[0].toString() \r\n            + currentdate.toISOString().split(\"T\")[0].split(\"-\")[1] \r\n            + currentdate.toISOString().split(\"T\")[0].split(\"-\")[2] + \"-\"\r\n            + currentdate.toISOString().split(\"T\")[1].split(\":\")[0] \r\n            + currentdate.toISOString().split(\"T\")[1].split(\":\")[1]  \r\n            + currentdate.toISOString().split(\"T\")[1].split(\":\")[2].split(\".\")[0]\r\n            + \"-\" + currentdate.toISOString().split(\"T\")[1].split(\":\")[2].split(\".\")[1].replace(\"Z\",\"\");\r\n        return datetime;\r\n    }\r\n\r\n    getDatePart(strPart) {\r\n        var currentdate = new Date();\r\n        if (strPart === \"Y\") {\r\n            return currentdate.toISOString().split(\"T\")[0].split(\"-\")[0];\r\n        } else if (strPart === \"M\") {\r\n            return currentdate.toISOString().split(\"T\")[0].split(\"-\")[1]\r\n        }           \r\n       \r\n    }\r\n\r\n    uploadFile() {\r\n        \r\n\r\n        var headers = new Headers();\r\n        headers.append(\"Accept\", 'application/json');\r\n        headers.append('Content-Type', 'application/json');\r\n        const requestOptions = new RequestOptions({ headers: headers });\r\n        const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n       let picDetail = {\r\n            \"imgName\": this.getDateTime()  + \"-APP.jpg\",\r\n           \"imgData\": this.base64Image.replace(\"data:image/jpeg;base64,\", '')\r\n        }\r\n\r\n        \r\n        this.httpClient.post(this.communityService.baseUrl+ '/ImageUpload/File/xyz.jpg/', picDetail, requestOptions)\r\n            .subscribe(data => {\r\n                this.base64Image = \"\";\r\n                console.log(data['_body']);\r\n                this.appendToImgList(JSON.parse(data['_body']));\r\n                this.cntImagetoLoad--;\r\n                if (this.cntImagetoLoad === 0) {\r\n                    this.loadingCtrl.dismiss();\r\n                    this.populateGrid(\"W1\");\r\n                    this.presentToast(\"Image uploaded successfully\");\r\n                    \r\n                }\r\n                \r\n               \r\n             }, error => {\r\n                 console.log(error);\r\n                 this.loadingCtrl.dismiss();\r\n                 this.presentToast(error);\r\n            });\r\n\r\n        \r\n    }\r\n\r\n    appendToImgList(newImg) {\r\n        let newEntry = {\r\n            \"imgName\": newImg.imgName,\r\n            //\"imgUrl\": newImg.imgUrl,\r\n            \"imgParentUrl\": newImg.imgParentUrl,\r\n            \"period\": \"W1\",\r\n            \"imgAlbum\": newImg.imgAlbum,\r\n            \"imgYear\": newImg.imgYear,\r\n            \"imgMonth\": newImg.imgMonth\r\n        };\r\n\r\n        this.masterDetailService.pushImage(newEntry);\r\n        //this.populateGrid(\"W1\");\r\n    }\r\n\r\n    async presentToast(msg) {\r\n        const toast = await this.toastCtrl.create({\r\n            message: msg,\r\n            duration: 3000,\r\n            position: 'bottom'\r\n        });\r\n\r\n        //toast.onDidDismiss(() => {\r\n        //    console.log('Dismissed toast');\r\n        //});\r\n\r\n        toast.present();\r\n    }\r\n\r\n    slideDidChange () {\r\n        this.slidesMoving = false;\r\n\r\n        //////this.slides.getActiveIndex().then(val => {\r\n        //////    let slideIndex: number = val;\r\n        //////    this.slideIndex = val;\r\n        //////    //if (this.slideIndex === 1) {\r\n        //////    //    this.Albums = this.masterDetailService.getAlbums().split(\",\");\r\n        //////    //}\r\n        //////    //let currentSlide: Element = this.slides\r\n        //////    //let slideNumbers : number = this.slides.length();\r\n        //////    //if (slideIndex === 1) {\r\n        //////    //    this.slidesHeight = 200;\r\n        //////    //}\r\n        //////});\r\n        this.slides.getActiveIndex().then(val => {\r\n            if (val == 0) {\r\n                this.icons = \"grid\";\r\n                //this.slides.lockSwipeToPrev(true);\r\n            } else if (val == 1) {\r\n                this.icons = \"albums\";\r\n                //this.slides.lockSwipeToPrev(false);\r\n            }\r\n        });\r\n        //this.navCtrl.navigateRoot(\"about\");\r\n        \r\n        \r\n    }\r\n\r\n    \r\n    tabChange() {\r\n        if (this.icons === \"grid\") {\r\n            this.slides.slideTo(0);\r\n            //this.slides.lockSwipeToPrev(true);\r\n        } else if (this.icons === \"albums\") {\r\n            this.slides.slideTo(1);\r\n            //this.slides.lockSwipeToPrev(false);\r\n        }\r\n    }\r\n\r\n    slideWillChange() {\r\n        this.slidesMoving = true;\r\n        //this.screenshot.URI(100).then(scrUri => { this.masterDetailService.setTabImg(0, scrUri) });\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n        console.log(\"ionViewWillEnter\");\r\n\r\n        if (this.masterDetailService.getFilter() != '' && this.masterDetailService.getIsDirty()) {\r\n            //this.presentLoading();\r\n            //this.populateGrid(\"W1\");\r\n            //this.populateGrid(\"W2\");\r\n            //this.populateGrid(\"W3\");\r\n            //this.populateGrid(\"W4\");\r\n            //this.populateGrid(\"M1\");\r\n            //this.populateGrid(\"M3\");\r\n            //this.populateGrid(\"M2\");\r\n            //this.populateGrid(\"Y1\");\r\n            //this.populateGrid(\"Y2\");\r\n            //this.populateGrid(\"Y3\");\r\n            //this.populateGrid(\"Y4\");\r\n            this.masterDetailService.setIsDirty(false);\r\n            //this.loadingCtrl.dismiss();\r\n        }\r\n    }\r\n\r\n    async  presentAlertSettings() {\r\n    const alertController = document.querySelector('ion-alert-controller');\r\n    await alertController.componentOnReady();\r\n    const alert = await alertController.create({\r\n        header: 'App Settings',\r\n        inputs: [\r\n            {\r\n                name: 'imgPerRow',\r\n                value: this.masterDetailService.getImgGridCols(),\r\n                placeholder: 'Images per Row'\r\n            },\r\n            {\r\n                name: 'imgRowsPerPage',\r\n                value: this.masterDetailService.getImgGridRows(),\r\n                placeholder: 'Grid rows per page'\r\n            }\r\n        ],\r\n        buttons: [\r\n            {\r\n                text: 'Cancel',\r\n                role: 'cancel',\r\n                cssClass: 'secondary',\r\n                handler: () => {\r\n                    console.log('Confirm Cancel')\r\n                }\r\n            }, {\r\n                text: 'Ok',\r\n                handler: data => {\r\n                    console.log('Confirm Ok')\r\n                                       \r\n                    this.masterDetailService.setImgGridCols(parseInt(data.imgPerRow));\r\n                    this.masterDetailService.setImgGridRows(parseInt(data.imgRowsPerPage));\r\n                }\r\n            }\r\n        ]\r\n    });\r\n    return await alert.present();\r\n    }\r\n\r\n    doRefresh(refresher) {\r\n        console.log('Begin async operation', refresher);\r\n        this.ngOnInit();\r\n\r\n        setTimeout(() => {\r\n            console.log('Async operation has ended');\r\n            refresher.target.complete();\r\n        }, 2000);\r\n    }\r\n\r\n    /////////////////////ALBUM PAGE SPECIFIC//////////////////////\r\n\r\n    async presentAlbumLoading(strAlbum) {\r\n        const loading = await this.loadingCtrl.create({\r\n            message: 'loading images...'\r\n            //,duration: 3000\r\n        });\r\n        //return await loading.present();\r\n        await loading.present().then(val => {\r\n            this.loadImgLIst(strAlbum);\r\n        });\r\n    }\r\n\r\n    loadImgLIst(strAlbum) {\r\n        this.masterDetailService.setCurrAlbum(strAlbum);\r\n        this.masterDetailService.setListMode(\"ALBUM\");\r\n        this.navCtrl.navigateForward('imglist');\r\n    }\r\n\r\n    loadAlbum(strAlbum) {\r\n        this.presentAlbumLoading(strAlbum);\r\n\r\n    }\r\n\r\n    addAlbum() {\r\n        this.presentAlbumPrompt();\r\n    }\r\n\r\n    async presentAlbumPrompt() {\r\n        const alert = await this.alertController.create({\r\n            header: \"Add Album\",\r\n            inputs: [\r\n                {\r\n                    name: 'albumname',\r\n                    placeholder: 'Album Name'\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    text: 'Cancel',\r\n                    role: 'cancel',\r\n                    handler: data => {\r\n                        console.log('Cancel clicked');\r\n                    }\r\n                },\r\n                {\r\n                    text: 'Create',\r\n                    handler: data => {\r\n                        console.log(data);\r\n                        console.log(data.albumname);\r\n                        let strAlbum: string = data.albumname;\r\n\r\n                        this.masterDetailService.addAlbum(strAlbum.toUpperCase().replace(\"-\", \"_\"));\r\n                        this.Albums = this.masterDetailService.getAlbums().split(\",\");\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        await alert.present();\r\n    }\r\n}\r\n\r\n\r\n"],"sourceRoot":""}